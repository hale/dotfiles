let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

if &compatible
  set nocompatible
end
call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'airblade/vim-rooter'             " working directly always project root
Plug 'benmills/vimux'                  " vim + tmux
Plug 'danielwe/base16-vim'             " TODO: use upstream after this is merged: https://github.com/chriskempson/base16-vim/pull/198
Plug 'christoomey/vim-tmux-navigator'
Plug 'junegunn/goyo.vim'
Plug 'jszakmeister/vim-togglecursor'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'mbbill/undotree'
Plug 'mileszs/ack.vim'
Plug 'mxw/vim-jsx'
Plug 'pangloss/vim-javascript'
Plug 'ruanyl/vim-fixmyjs'
Plug 'scrooloose/nerdcommenter'
Plug 'skalnik/vim-vroom'               " run current / last spec, send output to tmux pane
Plug 'spolu/dwm.vim'
Plug 'tmux-plugins/vim-tmux'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-haml'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'                  " Rails.vim for regular ruby projects
Plug 'tpope/vim-repeat'                " '.' works in more cases
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'            " easy navigation in quickfix (+more)
Plug 'tpope/vim-vinegar'               " improved :Explore (netrw)
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/restore_view.vim'
Plug 'godlygeek/tabular'
Plug 'dense-analysis/ale'
Plug 'godlygeek/tabular'
Plug 'Yggdroot/indentLine'             " indentation guide lines (vertical)
Plug 'hashivim/vim-terraform'
Plug 'ruanyl/vim-gh-line'              " open current line in GitHub

call plug#end()
